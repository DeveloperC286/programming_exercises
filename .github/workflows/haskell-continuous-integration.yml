name: Continuous Integration (CI)

on: pull_request

jobs:
  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [advent_of_code/2021/day1/haskell, advent_of_code/2021/day2/haskell]
        language: [haskell, shell]
    steps:
      - name: Checkout code.
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check formatting.
        run: cd "${{ matrix.directory}}" && make check-${{ matrix.language }}-formatting
  linting:
    name: Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [advent_of_code/2021/day1/haskell, advent_of_code/2021/day2/haskell]
        language: [haskell]
    steps:
      - name: Checkout code.
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Check linting.
        run: cd "${{ matrix.directory}}" && make check-${{ matrix.language }}-linting
  compile:
    name: Compile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [advent_of_code/2021/day1/haskell, advent_of_code/2021/day2/haskell]
    steps:
      - name: Checkout code.
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Compile.
        run: cd "${{ matrix.directory}}" && make compile
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [advent_of_code/2021/day1/haskell, advent_of_code/2021/day2/haskell]
    steps:
      - name: Checkout code.
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Unit test.
        run: cd "${{ matrix.directory}}" && make unit-test
