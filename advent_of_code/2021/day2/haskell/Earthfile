VERSION 0.7


COPY_CI_DATA:
    COMMAND
    COPY --dir "ci/" "./"


COPY_SOURCECODE:
    COMMAND
    DO +COPY_CI_DATA
    COPY --dir "Day2.cabal" "src/" "tests/" "./"


haskell-base:
    FROM haskell:9.12.2@sha256:fa33446b4a9b1319593dd7f809cc63426034690d72614945b1a4cb2209df660f
    RUN cabal update


haskell-formatting-base:
    FROM +haskell-base
    RUN cabal install ormolu
    DO +COPY_SOURCECODE


check-haskell-formatting:
    FROM +haskell-formatting-base
    RUN ./ci/check-haskell-formatting.sh


golang-base:
    FROM golang:1.24.3@sha256:81bf5927dc91aefb42e2bc3a5abdbe9bb3bae8ba8b107e2a4cf43ce3402534c6


shell-formatting-base:
    FROM +golang-base
    RUN go install mvdan.cc/sh/v3/cmd/shfmt@v3.7.0
    DO +COPY_CI_DATA


check-shell-formatting:
    FROM +shell-formatting-base
    RUN ./ci/check-shell-formatting.sh


check-formatting:
    BUILD +check-haskell-formatting
    BUILD +check-shell-formatting


fix-haskell-formatting:
    FROM +haskell-formatting-base
    RUN ./ci/fix-haskell-formatting.sh
    SAVE ARTIFACT "src/" AS LOCAL "./"
    SAVE ARTIFACT "tests/" AS LOCAL "./"


fix-shell-formatting:
    FROM +shell-formatting-base
    RUN ./ci/fix-shell-formatting.sh
    SAVE ARTIFACT "ci/" AS LOCAL "./"


fix-formatting:
    BUILD +fix-haskell-formatting
    BUILD +fix-shell-formatting


check-haskell-linting:
    FROM +haskell-base
    RUN cabal install hlint
    DO +COPY_SOURCECODE
    RUN ./ci/check-haskell-linting.sh


ubuntu-base:
    FROM ubuntu:24.04@sha256:6015f66923d7afbc53558d7ccffd325d43b4e249f41a6e93eef074c9505d2233
    # https://askubuntu.com/questions/462690/what-does-apt-get-fix-missing-do-and-when-is-it-useful
    RUN apt-get update --fix-missing


check-shell-linting:
    FROM +ubuntu-base
    RUN apt-get install shellcheck -y
    DO +COPY_CI_DATA
    RUN ./ci/check-shell-linting.sh


check-linting:
    BUILD +check-haskell-linting
    BUILD +check-shell-linting


compile:
    FROM +haskell-base
    DO +COPY_SOURCECODE
    RUN ./ci/compile.sh


unit-test:
    FROM +haskell-base
    DO +COPY_SOURCECODE
    RUN ./ci/unit-test.sh
